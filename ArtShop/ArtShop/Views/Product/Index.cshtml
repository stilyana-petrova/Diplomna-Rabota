@using ArtShop.Models.Order
@model IEnumerable<ArtShop.Models.Product.ProductIndexVM>

@{
    ViewData["Title"] = "Index";
}


<h1>All Products</h1>
@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Product" asp-action="Index" method="get">
    <p>
        Category: <input type="text" name="SearchStringCategoryName" />
        Designer: <input type="text" name="SearchStringDesignerName" />

        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.CategoryId)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.DesignerId)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.DesignerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            @if (this.User.Identity.IsAuthenticated)
            {
                <th>Order</th>
            }

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.CategoryId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.DesignerId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.DesignerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>

                    <img src="@Html.DisplayFor(modelItem => item.Photo)" alt="Photo" width="100" class="img-fluid" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount) %
                </td>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <td>
                        @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                        {
                        ProductId = item.Id
                        })
                    </td>
                }
                <td>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id"><img src="~/images/edit.png" width="25"></a> 
                    }
                    <a asp-action="Details" asp-route-id="@item.Id"><img src="~/images/details.png" width="25" /></a>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        
                        <a asp-action="Delete" asp-route-id="@item.Id"><img src="~/images/delete.svg" width="25"/></a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
